 Document all changes and their reasoning IN THE COMMENTS YOU WRITE
- when writing comments, use clear and easy-to-understand language. write in short sentences.
# PROJECT OVERVIEW

explain the project in a few sentences

# PERSONALITY

explain the personality of the project in a few sentences

# TECH STACK

choose a tech stack with super popular languages

# ERROR FIXING PROCESS
# BUILDING PROCESS
# Our .env variables
# CURRENT FILE STRUCTURE
tree -L 4 -a -I 'node_modules|.git|pycache|.DS_Store|pytest_cache|.vscode'
# GITHUB PUSH PROCESS
# IMPORTANT

repeat the most important instructions

The fewer lines of code, the better
Proceed like a Senior Developer // 10x engineer
DO NOT STOP WORKING until...
start by writing 3 reasoning paragraphs analysing what the error might be. DO NOT JUMP TO CONCLUSIONS
Reasoning paragraphs
Answer in short
DO NOTE DELETE COMMENTS
summary of current state
# summary of current state
before we proceed, i need you to give me a summary of the current state of the project.
format this as 3 concise paragraphs, where you describe what we just did, what did not work, which files were updated/created, what mistakes to avoid, any key insights/lessons we've learned, what problems/errors we are facing, ... and anything else a programmer might need to work productively on this project.
describe what we just did, what did not work, which files were updated/created, what mistakes to avoid, any key insights/lessons we've learned, what problems/errors we are facing, ... and anything else a programmer might need to work productively on this project.
write in a conversational yet informative tone, something like a README file on github that is super information dense and without any fluff or noise. DO NOT include any assumptions or theories, just the facts.
i expect to see three concise paragraphs, written as if you were giving instructions to another programmer and this was ALL you