import { useState } from 'react';

export default function GradeSelector() {
  const [selectedGrade, setSelectedGrade] = useState('');
  const [percentage, setPercentage] = useState('');

  const defaultPercents = {
    'S': 54,
    'B': 69,
    'P': 84,
    'A': 100
  };

  const getGradeByPercent = (percent) => {
    const num = parseInt(percent);
    if (num >= 40 && num <= 54) return 'S';
    if (num >= 55 && num <= 69) return 'B';
    if (num >= 70 && num <= 84) return 'P';
    if (num >= 85 && num <= 100) return 'A';
    return null;
  };

  const handleGradeSelect = (grade) => {
    setSelectedGrade(grade);
    setPercentage(defaultPercents[grade]);
  };

  const handlePercentageChange = (value) => {
    setPercentage(value);
    const grade = getGradeByPercent(value);
    setSelectedGrade(grade || '');
  };

  const handlePercentageBlur = () => {
    const percent = parseInt(percentage);
    if (percent < 0 || percent > 100 || isNaN(percent)) {
      setPercentage('');
      setSelectedGrade('');
    }
  };

  const getButtonStyle = (gradeId) => {
    const baseStyle = "w-20 h-16 rounded-2xl border-2 font-bold text-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg";
    
    if (selectedGrade === gradeId) {
      const colors = {
        'S': 'bg-green-500 text-white border-transparent shadow-lg',
        'B': 'bg-blue-500 text-white border-transparent shadow-lg',
        'P': 'bg-orange-500 text-white border-transparent shadow-lg',
        'A': 'bg-red-500 text-white border-transparent shadow-lg'
      };
      return `${baseStyle} ${colors[gradeId]}`;
    }
    
    return `${baseStyle} bg-white text-gray-500 border-gray-200 hover:border-gray-300`;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-500 to-purple-600 p-8">
      <div className="max-w-2xl mx-auto bg-white rounded-3xl p-10 shadow-2xl">
        <h1 className="text-3xl font-bold text-gray-700 text-center mb-10">
          ðŸŽ¯ PasiekimÅ³ lygiai
        </h1>
        
        <div className="flex items-start gap-8">
          {/* Grades Container */}
          <div className="flex flex-col gap-4 flex-1">
            {['S', 'B', 'P', 'A'].map((grade) => (
              <button
                key={grade}
                onClick={() => handleGradeSelect(grade)}
                className={getButtonStyle(grade)}
              >
                {selectedGrade === grade ? 'âœ“' : grade}
              </button>
            ))}
          </div>
          
          {/* Divider */}
          <div className="w-0.5 h-72 bg-gradient-to-b from-gray-200 to-gray-400 rounded-full mt-2"></div>
          
          {/* Percentage Section */}
          <div className="flex flex-col items-center min-w-32 mt-12">
            <input
              type="number"
              value={percentage}
              onChange={(e) => handlePercentageChange(e.target.value)}
              onBlur={handlePercentageBlur}
              min="0"
              max="100"
              placeholder="%"
              className="w-24 h-16 border-2 border-gray-200 rounded-xl text-center text-xl font-bold text-gray-700 bg-white transition-all duration-300 focus:outline-none focus:border-indigo-500 focus:shadow-lg focus:ring-4 focus:ring-indigo-200"
            />
            <div className="text-sm text-gray-500 font-medium mt-3 text-center leading-relaxed">
              <div>S: 40-54%</div>
              <div>B: 55-69%</div>
              <div>P: 70-84%</div>
              <div>A: 85-100%</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}